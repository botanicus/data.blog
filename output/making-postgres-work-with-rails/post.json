{"title":"Making Postgres work with Rails","slug":"making-postgres-work-with-rails","path":"/posts/making-postgres-work-with-rails/post.json","date":"2019-07-09T17:20:04Z","excerpt":"Every single time I try to set up Postgres with a new project, I run into some issues. This short HOWTO is mostly for me to remember how to make it work.","body":"## Installation\n\n```\napt get install postgresql libpq-dev\ngem install pg\n```\n\n## Creating a new user\n\nIf you want to check your `config/database.yml` into the repozitory, you should keep `username` and `password` out of it.\n\nAnd you can: just create a new user *with the same name as your system user*.\n\n```\nsudo -u postgres createuser -s $(whoami)\n```\n\n## Fixing authentication errors\n\nOpen `/etc/postgresql/10/main/pg_hba.conf` and look for this line:\n\n```\nlocal   all             all                                     peer\n```\n\nNow change `peer` authentication method to `trust`.\n\n```\nservice postgresql restart\n```\n\n## Fixing permission errors\n\n```\nsudo -u postgres psql -U postgres\n```\n\n```sql\n#GRANT CONNECT ON DATABASE postgres TO root;\nALTER USER myuser WITH SUPERUSER;\n```\n\n## Bootstrapping the databases\n\nAnd that's it! Now just run the usual `bundle exec rails db:create db:migrate` and you should be good to go.","tags":[{"name":"Ruby on Rails","slug":"ruby-on-rails","path":"/tags/ruby-on-rails.json"},{"name":"Postgres","slug":"postgres","path":"/tags/postgres.json"},{"name":"HOWTO","slug":"howto","path":"/tags/howto.json"}]}
